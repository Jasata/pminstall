#
# Intance Mode
#
#   This SD writing utility and the installation script follow three-tier model
#   DEV, UAT and PRD (development, user acceptance testing, production).
#   Each of these modes may have their own special settings that the installer
#   script needs to implement.
#
#   Installer script is made aware of the instance mode by creating
#   '/etc/patemon.config' file into the written target image with the mode
#   stored.
#
# IMPORTANT! Do NOT write inline comments (key = value # comment here)!!
#
[Mode]

    # Specify the default mode for written SD image. This can always be
    # overridden with a command line option.
    # Options:
    #       DEV | UAT | PRD
    #
    default = DEV

#
# Dynamic DNS Client
#
#   DHCP at utu.fi provides dynamic IP addresses for "non-listed" machines and
#   raspberry pi used to develop Pate Monitor solution definitely falls into
#   this category - and it is a problem for headless unit.
#
#   Rasbian writing utility 'writesd.py' is equipped to enable DDNS client in
#   the created SD, but it needs the account credentials to be able to update
#   the IP. You need to create DynuDNS account with a name and update username
#   and password below. This enables the DDNS client to update the IP on every
#   boot and keep on doing that hourly while running.
#
[DDNS]

    # List of modes in which the DDNS client is enabled by default.
    # Leave empty if you do now wish DDNS to be enabled by default in any mode.
    # 
    enabled modes = DEV, UAT

    # The username and password for the DynuDNS account.
    #
    username = 
    password = 

#
# Git configuration
#
#   Just the basic configuration for 'pi' user
#
[Git]

    # Things you would set with 'git config --global user....`
    # Simply leave the value blank if you wish not to have it defined.
    #
    name    = Jani Tammi
    email   = jasata@utu.fi
    editor  = nano

#
# Installer Script
#
#   Specify which installer script to copy to /boot. This can also be a
#   comma separated list of files.
#   TODO: Later this section will add "first-run" parameters.
#
[Installer]

    # List of files to copy to /boot
    # Each comma separated file is treated as relative to script's directory,
    # or it has to begin with '/' to be treated as absolute filepath.
    # NOTE: Filenames or paths cannot contain comma!
    #
    copy = install.py, vminstall.py

    # Scriptname to run once during first power-up
    # DO NOT give path - just the scriptname, and ONLY one
    #
    run = install.py
